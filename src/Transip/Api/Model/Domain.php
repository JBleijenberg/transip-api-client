<?php
/**
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the General Public License (GPL 3.0)
 * that is bundled with this package in the file LICENSE
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/GPL-3.0
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future.
 *
 * @author      Jeroen Bleijenberg
 *
 * @copyright   Copyright (c) 2017
 * @license     http://opensource.org/licenses/GPL-3.0 General Public License (GPL 3.0)
 */
namespace Transip\Api\Model;

use Transip\Api\Model\Domain\Branding;

class Domain
{

    /**
     * The name, including the tld of this domain
     *
     * @var string  $name
     */
    public $name = '';

    /**
     * The list of nameservers (with optional gluerecords) for this domain
     *
     * @var array   $nameservers
     */
    public $nameservers = array();

    /**
     * The list of WhoisContacts for this domain
     *
     * @var array   $contacts
     */
    public $contacts = array();

    /**
     * The list of DnsEntries for this domain
     *
     * @var array   $dnsEntries
     */
    public $dnsEntries = array();

    /**
     * The branding for this domain, some Tlds support additional
     * whois- and transfer-branding which will be stored in this variable.
     * Even if a Tld does not support  branding, it will
     * always be stored in this variable for consistency.
     *
     * @var Branding    $branding
     */
    public $branding;

    /**
     * The authcode for this domain as generated by the registry. Read-only.
     *
     * @var string  $authCode
     * @readonly
     */
    public $authCode = '';

    /**
     * If this domain supports locking, this flag is true when the domain is locked
     * at the registry, false if not. Read-only.
     *
     * Use Transip_DomainService::setLock() to change the lock status of a domain.
     *
     * @var boolean $isLocked
     * @readonly
     */
    public $isLocked = false;

    /**
     * Registration date of the domain, in YYYY-mm-dd format. Read-only.
     *
     * @var string
     * @readonly
     */
    public $registrationDate = '';

    /**
     * Next renewal date of the domain, in YYYY-mm-dd format. Read-only.
     *
     * @var string
     * @readonly
     */
    public $renewalDate = '';

    /**
     * Constructs a new Domain
     *
     * @param string    $name           the domain name of the domain, including tld
     * @param array     $nameservers    the list of nameservers (with optional gluerecords) for this domain
     * @param array     $contacts       the list of WhoisContacts for this domain
     * @param array     $dnsEntries     the list of DnsEntries for this domain
     * @param string    $branding       the branding for this domain, see the branding property for more info
     */
    public function __construct($name, $nameservers=array(), $contacts=array(), $dnsEntries=array(), $branding=null)
    {
        $this->name			= $name;
        $this->nameservers	= $nameservers;
        $this->contacts 	= $contacts;
        $this->dnsEntries	= $dnsEntries;
        $this->branding 	= $branding;
    }
}